buildscript {
    repositories {
        mavenCentral()
        maven { url = "http://files.minecraftforge.net/maven" }
        maven { url = "https://oss.sonatype.org/content/repositories/snapshots/" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
        classpath 'org.ajoberstar:gradle-git:0.10.1'
    }
}

plugins {
    id 'com.matthewprenger.cursegradle' version '1.0.5'
	id "net.minecraftforge.gradle.forge" version "2.0.2"
}

apply plugin: 'maven-publish'
apply plugin: 'idea'

group = package_group
archivesBaseName = mod_name
version = "${mc_version}-${mod_version}"

repositories {
    maven {url "http://tehnut.info/maven"}
}

dependencies {
    deobfCompile "mcp.mobius.waila:Hwyla:1.8.1-B13_1.10.2"
}

minecraft {
    version = "${mc_version}-${forge_version}"
    runDir = "run"

    replaceIn "FuturisticLamps.java"
    replace "@VERSION@", project.version

    if (project.hasProperty('mappings_version'))
        mappings = project.mappings_version
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include '**/*.info'
        include '**/*.properties'

        expand 'version': project.version, 'mcversion': project.minecraft.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
        exclude '**/*.properties'
    }
}

jar {
    classifier = ''
    manifest.mainAttributes(
            "Built-By": System.getProperty('user.name'),
            "Created-By": "${System.getProperty('java.vm.version')} + (${System.getProperty('java.vm.vendor')})",
            "Implementation-Title": project.name,
            "Implementation-Version": project.version,
            "Built-on": "${mc_version}-${forge_version}"
    )
}

tasks.build.dependsOn sourceJar

publishing {
    tasks.publish.dependsOn 'build'
    publications {
        mavenJava(MavenPublication) {
            artifact jar
            artifact sourceJar
        }
    }
    repositories {
        if (project.hasProperty('maven_repo')) {
            maven { url maven_repo }
        } else {
            mavenLocal()
        }
    }
}

/*
curseforge {
    if (project.hasProperty('curse_key'))
        apiKey = project.curse_key

    project {
        id = "${curse_id}"
		changelog = project.hasProperty('changelog') ? project.changelog : ''
        releaseType = 'release'

        addArtifact sourceJar
    }
}*/
